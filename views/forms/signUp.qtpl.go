// Code generated by qtc from "signUp.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// All the text outside function templates is treated as comments,
// i.e. it is just ignored by quicktemplate compiler (`qtc`). It is for humans.
//
// .

//line views/forms/signUp.qtpl:5
package forms

//line views/forms/signUp.qtpl:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/forms/signUp.qtpl:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/forms/signUp.qtpl:5
func StreamSignUpForm(qw422016 *qt422016.Writer) {
//line views/forms/signUp.qtpl:5
	qw422016.N().S(`
<form target="content" action="/api/v1/user/signup/mp" method="post"  enctype="multipart/form-data"
      onsubmit="return saveForm(this, afterLogin);"  class="form-signup">
    <h2 class="form-signin-heading">Регистрация</h2>
    <input type="email" name="email" class="input-block-level" required placeholder="email для регистрации в системе">
    <input type="submit" value="Зарегистрироваться.">
    <input type="button" data-href="/user/oauth/" onclick="return getOauth(this);" value="Google">
    <output></output>
    <progress value='0' max='100' hidden > </progress>
</form>
`)
//line views/forms/signUp.qtpl:15
}

//line views/forms/signUp.qtpl:15
func WriteSignUpForm(qq422016 qtio422016.Writer) {
//line views/forms/signUp.qtpl:15
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/forms/signUp.qtpl:15
	StreamSignUpForm(qw422016)
//line views/forms/signUp.qtpl:15
	qt422016.ReleaseWriter(qw422016)
//line views/forms/signUp.qtpl:15
}

//line views/forms/signUp.qtpl:15
func SignUpForm() string {
//line views/forms/signUp.qtpl:15
	qb422016 := qt422016.AcquireByteBuffer()
//line views/forms/signUp.qtpl:15
	WriteSignUpForm(qb422016)
//line views/forms/signUp.qtpl:15
	qs422016 := string(qb422016.B)
//line views/forms/signUp.qtpl:15
	qt422016.ReleaseByteBuffer(qb422016)
//line views/forms/signUp.qtpl:15
	return qs422016
//line views/forms/signUp.qtpl:15
}
